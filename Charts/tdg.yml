apiVersion: v1
kind: Namespace
metadata:
  annotations:
    autoscaling.knative.dev/min-scale: "1"
  labels:
    networking.knative.dev/enabledWildcardCert: "true"
  name: "thedungeonguide"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: players-api
  namespace: "thedungeonguide"
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: ghcr.io/avabin/players-api:latest
          ports:
            - containerPort: 80
          env:
            - name: JWT_AUTHORITY
              value: "https://keycloak.avabin.xyz/realms/master"
            - name: JWT_AUDIENCE
              value: "root"
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: TDG_Eventing__Source
              value: "players-api"
            - name: TDG_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: TDG_Eventing__BrokerName
              value: "tdg-broker"
            - name: TDG_Eventing__BrokerNamespace
              value: "thedungeonguide"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  labels:
    networking.knative.dev/visibility: cluster-local
  name: players-mongo
  namespace: "thedungeonguide"
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: ghcr.io/avabin/sessions-mongo:latest
          ports:
            - containerPort: 80
          env:
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: TDG_Eventing__Source
              value: "players-persistence"
            - name: TDG_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: TDG_Eventing__BrokerName
              value: "tdg-broker"
            - name: TDG_Eventing__BrokerNamespace
              value: "thedungeonguide"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: TDG_ConnectionStrings__Mongo
              value: "mongodb://andrzej-pc.lan:27017"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: sessions-api
  namespace: "thedungeonguide"
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: ghcr.io/avabin/sessions-api:latest
          ports:
            - containerPort: 80
          env:
            - name: JWT_AUTHORITY
              value: "https://keycloak.avabin.xyz/realms/master"
            - name: JWT_AUDIENCE
              value: "root"
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: TDG_Eventing__Source
              value: "sessions-api"
            - name: TDG_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: TDG_Eventing__BrokerName
              value: "tdg-broker"
            - name: TDG_Eventing__BrokerNamespace
              value: "thedungeonguide"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  labels:
    networking.knative.dev/visibility: cluster-local
  name: sessions-mongo
  namespace: "thedungeonguide"
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: ghcr.io/avabin/sessions-mongo:latest
          ports:
            - containerPort: 80
          env:
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: TDG_Eventing__Source
              value: "sessions-persistence"
            - name: TDG_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: TDG_Eventing__BrokerName
              value: "tdg-broker"
            - name: TDG_Eventing__BrokerNamespace
              value: "thedungeonguide"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: TDG_ConnectionStrings__Mongo
              value: "mongodb://andrzej-pc.lan:27017"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: characters-api
  namespace: "thedungeonguide"
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: ghcr.io/avabin/characters-api:latest
          ports:
            - containerPort: 80
          env:
            - name: JWT_AUTHORITY
              value: "https://keycloak.avabin.xyz/realms/master"
            - name: JWT_AUDIENCE
              value: "root"
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: TDG_Eventing__Source
              value: "characters-api"
            - name: TDG_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: TDG_Eventing__BrokerName
              value: "tdg-broker"
            - name: TDG_Eventing__BrokerNamespace
              value: "thedungeonguide"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  labels:
    networking.knative.dev/visibility: cluster-local
  name: characters-mongo
  namespace: "thedungeonguide"
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containers:
        - image: ghcr.io/avabin/characters-mongo:latest
          ports:
            - containerPort: 80
          env:
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: TDG_Eventing__Source
              value: "characters-persistence"
            - name: TDG_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: TDG_Eventing__BrokerName
              value: "tdg-broker"
            - name: TDG_Eventing__BrokerNamespace
              value: "thedungeonguide"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: TDG_ConnectionStrings__Mongo
              value: "mongodb://andrzej-pc.lan:27017"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  labels:
    networking.knative.dev/visibility: cluster-local
  name: deadletters-sink
  namespace: "thedungeonguide"
spec:
  template:
    spec:
      containers:
        - image: ghcr.io/avabin/deadlettersink:latest
          ports:
            - containerPort: 80
          env:
            - name: SEQ_URL
              value: "http://seq.apps:5341"
            - name: DLS_Eventing__Source
              value: "deadletters"
            - name: DLS_Eventing__BrokerBaseUrl
              value: "http://kafka-broker-ingress.knative-eventing"
            - name: DLS_Eventing__BrokerName
              value: "tdg-broker"
            - name: DLS_Eventing__BrokerNamespace
              value: "thedungeonguide"
            - name: ASPNETCORE_URLS
              value: "http://0.0.0.0:80"
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
---
apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  name: "tdg-broker"
  namespace: "thedungeonguide"
spec:
  delivery:
    retry: 5
    backoffDelay: "PT5S"
    deadLetterSink:
      ref:
        apiVersion: serving.knative.dev/v1
        kind: Service
        name: deadletters-sink
        namespace: "thedungeonguide"
      uri: "/"
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: characters-mongo-trigger
  namespace: "thedungeonguide"
  annotations:
    kafka.eventing.knative.dev/delivery.order: ordered
spec:
  filter:
    attributes:
      subject: characters-persistence
  broker: "tdg-broker"
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: characters-mongo
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: characters-api-trigger
  namespace: "thedungeonguide"
spec:
  filter:
    attributes:
      subject: characters-api
  broker: "tdg-broker"
  delivery:
    retry: 0
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: characters-api
    uri: /events
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: characters-mongo-trigger
  namespace: "thedungeonguide"
  annotations:
    kafka.eventing.knative.dev/delivery.order: ordered
spec:
  filter:
    attributes:
      subject: sessions-persistence
  broker: "tdg-broker"
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: sessions-mongo
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: sessions-api-trigger
  namespace: "thedungeonguide"
spec:
  filter:
    attributes:
      subject: sessions-api
  broker: "tdg-broker"
  delivery:
    retry: 0
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: sessions-api
    uri: /events
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: characters-mongo-trigger
  namespace: "thedungeonguide"
  annotations:
    kafka.eventing.knative.dev/delivery.order: ordered
spec:
  filter:
    attributes:
      subject: sessions-persistence
  broker: "tdg-broker"
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: sessions-mongo
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: players-api-trigger
  namespace: "thedungeonguide"
spec:
  filter:
    attributes:
      subject: players-api
  broker: "tdg-broker"
  delivery:
    retry: 0
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: players-api
    uri: /events